/* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

.container {
   background-color: black;
   padding: 20px;
   /* grid :  */
   /* display: grid;
   grid-template-columns: 1fr 50px 2fr;
   grid-template-rows: 2fr 1fr 100px;

}

.item {
   background-color: rgb(36, 151, 151);
   border: 1px solid white;
}

.container-repeat {
    background-color: black;
    display: grid;
   */
    /* repeat: 반복되는 값에 대해 자동으로 처리하는 함수 (갯수, 크기) */
    /* grid-template-columns: repeat(3 1fr);
  
    /* minmax() : 최소값과 최대값을 지정할 수 있는 함수 minmax(최솟값(item의 ), 셀의 최댓값=max) */
    /* grid-template-columns: repeat(3, minmax(200px, 1fr));
    /* auto-fit, auto-fill: 자동으로 컬럼수를 조절 */
    /* auto-fit: grid item의 갯수와 cell의 갯수가 일치한 채로 너비 조절 */
    /* auto-fill: min으로 설정한 공간에 들어갈 수 있다면 빈 셀을 증가 시키며 조절 */
    /* grid-template-columns: repeat(auto-fit, minmax(220px- 340-400정도 넣거나, 1fr - 1400 최대값 잡아주면 더 안나오고 내려감)); */
    /* grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px 0;
} */

* {

}

.container-start-end {
    background-color: black;
    padding: 10px;
    margin: 10px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    
}

/* 셀의 영역 기준으로 아이템 배치 */
.container-start-end > .item:nth-child(1) {
    /* grid-column: 1/3; */
    grid-column: 1/span 2;
    grid-row: 1/3;
}

.container-start-end > .item:nth-child(7) {
    grid-column: 3/4;
    grid-row: 3/5;
}